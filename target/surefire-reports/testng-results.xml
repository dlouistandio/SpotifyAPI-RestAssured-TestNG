<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-04-21T16:59:48 AWST" name="Surefire suite" finished-at="2023-04-21T16:59:54 AWST" duration-ms="6099">
    <groups>
    </groups>
    <test started-at="2023-04-21T16:59:48 AWST" name="Surefire test" finished-at="2023-04-21T16:59:54 AWST" duration-ms="6099">
      <class name="Spotify.OAuth2.Tests.PlaylistTest">
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:Spotify.OAuth2.Tests.PlaylistTest@7397c6]" started-at="2023-04-21T16:59:48 AWST" name="beforeMethod" finished-at="2023-04-21T16:59:48 AWST" duration-ms="45" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Spotify.OAuth2.Tests.PlaylistTest.notAbleToCreatePlaylist()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:Spotify.OAuth2.Tests.PlaylistTest@7397c6]" started-at="2023-04-21T16:59:48 AWST" name="beforeMethod" finished-at="2023-04-21T16:59:48 AWST" duration-ms="45" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Spotify.OAuth2.Tests.PlaylistTest.ableToGetPlaylist()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:Spotify.OAuth2.Tests.PlaylistTest@7397c6]" started-at="2023-04-21T16:59:48 AWST" name="beforeMethod" finished-at="2023-04-21T16:59:48 AWST" duration-ms="45" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Spotify.OAuth2.Tests.PlaylistTest.ableToUpdatePlaylist()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:Spotify.OAuth2.Tests.PlaylistTest@7397c6]" started-at="2023-04-21T16:59:48 AWST" name="beforeMethod" finished-at="2023-04-21T16:59:48 AWST" duration-ms="45" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Spotify.OAuth2.Tests.PlaylistTest.ableToCreatePlaylist()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:Spotify.OAuth2.Tests.PlaylistTest@7397c6]" started-at="2023-04-21T16:59:48 AWST" name="beforeMethod" finished-at="2023-04-21T16:59:48 AWST" duration-ms="45" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Spotify.OAuth2.Tests.PlaylistTest.notAbleToCreatePlaylistWithInvalidToken()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="notAbleToCreatePlaylistWithInvalidToken()[pri:0, instance:Spotify.OAuth2.Tests.PlaylistTest@7397c6]" started-at="2023-04-21T16:59:48 AWST" name="notAbleToCreatePlaylistWithInvalidToken" description="Create Playlist With Invalid Token" finished-at="2023-04-21T16:59:52 AWST" duration-ms="4228" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- notAbleToCreatePlaylistWithInvalidToken -->
        <test-method signature="ableToUpdatePlaylist()[pri:0, instance:Spotify.OAuth2.Tests.PlaylistTest@7397c6]" started-at="2023-04-21T16:59:48 AWST" name="ableToUpdatePlaylist" description="Update Playlist With Valid Token" finished-at="2023-04-21T16:59:54 AWST" duration-ms="5716" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ableToUpdatePlaylist -->
        <test-method signature="ableToCreatePlaylist()[pri:0, instance:Spotify.OAuth2.Tests.PlaylistTest@7397c6]" started-at="2023-04-21T16:59:48 AWST" name="ableToCreatePlaylist" description="Create Playlist With Valid Data" finished-at="2023-04-21T16:59:54 AWST" duration-ms="5777" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ableToCreatePlaylist -->
        <test-method signature="notAbleToCreatePlaylist()[pri:0, instance:Spotify.OAuth2.Tests.PlaylistTest@7397c6]" started-at="2023-04-21T16:59:48 AWST" name="notAbleToCreatePlaylist" description="Create Playlist With Invalid Data" finished-at="2023-04-21T16:59:54 AWST" duration-ms="5629" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- notAbleToCreatePlaylist -->
        <test-method signature="ableToGetPlaylist()[pri:0, instance:Spotify.OAuth2.Tests.PlaylistTest@7397c6]" started-at="2023-04-21T16:59:48 AWST" name="ableToGetPlaylist" description="Get Playlist With Valid Token" finished-at="2023-04-21T16:59:54 AWST" duration-ms="5650" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: "Playlist30hXZT,dK0_m_,_"
     but: was "Playlist0,HK 8__  Qk V "]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: "Playlist30hXZT,dK0_m_,_"
     but: was "Playlist0,HK 8__  Qk V "
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)
at Spotify.OAuth2.Tests.PlaylistTest.assertPlaylistEqual(PlaylistTest.java:34)
at Spotify.OAuth2.Tests.PlaylistTest.ableToGetPlaylist(PlaylistTest.java:90)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ableToGetPlaylist -->
      </class> <!-- Spotify.OAuth2.Tests.PlaylistTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
